1.Count the no of file.

package com.yash.io;
import java.io.File;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Simple {
	
	public static void main(String args[])
	{
		String path = null;
		try{
		Scanner input = new Scanner(System.in);
		System.out.print("Enter path of directory : ");
		path = input.next();
		
		}catch(InputMismatchException e)
		{
			System.out.println("Invalid path format");
		}
		
		File folder = new File(path);
		if(folder.isDirectory()==true)
		System.out.println("Given path is valid");
		else
		{
		System.out.println("Given path is not valid");
		System.exit(0);
		}
		int count=0;
		count = folder.list().length;
		System.out.println("Number of files in given directory : "+count);	
	}
	
}


2. IOAlternativePositionIntoUppercase

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class Simple2
{

	public static void replaceAlternate(String str) throws IOException 
	{
		String Temp = " ";
		String[] Array ;
		String Update = " ";
		
		FileReader fr = new FileReader(str);
		BufferedReader br = new BufferedReader(fr);
		
		String line = br.readLine();
		while(line!= null)
		{	
			Temp = Temp + line + System.lineSeparator();
			line = br.readLine();	
		}
		
		Array = Temp.split(" ");
		for(int i=0;i<Array.length;i++) 
		{
			if(i%2!=0) 
			{
				Update = Update+" " + Array[i];
			}
			else 
			{
				Update = Update+ " " + Array[i].toUpperCase();
			}
		}
		
		FileWriter fw = new FileWriter(str);
		BufferedWriter bw = new BufferedWriter(fw);
		bw.write(Update);
		bw.flush();
		bw.close();
		br.close();

	}
	public static void main(String[] args) throws IOException 
	{
		Scanner sc = new Scanner(System.in);
		String str = sc.nextLine();
		replaceAlternate(str);
	}

}


3.Replace wordIO

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.Scanner;

public class Simple3 
{

	public static void replaceWord (String str,String oldWord,String newWord ) throws IOException
	{
		
		String modify = " ";
		String Update = " ";
		FileReader fr = new FileReader(str);
		BufferedReader br = new BufferedReader(fr);
		
		String line = br.readLine();
		while(line!= null)
		{	
			modify = modify + line + System.lineSeparator();
			line = br.readLine();	
		}
		br.close();
		Update = modify.replaceAll("Java","C++");
			
		FileWriter fw = new FileWriter(str);
		BufferedWriter bw = new BufferedWriter(fw);
		bw.write(Update);
		bw.flush();
		bw.close();
		
	}
	
	public static void main(String[] args) throws IOException
	{
		    Scanner sc = new Scanner(System.in);
		    System.out.println("Enter the path Of File..........");
			String str = sc.nextLine();
			System.out.println("Enter the Word to be Repalced");
			String oldWord = sc.nextLine();	
			System.out.println("Enter the new Word to be placed");
			String newWord = sc.nextLine();	
			replaceWord("D:\\Drivers\\input.txt","Java","C++");

	}

}

4.Extension of file on console

package com.yash.io;

import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.nio.file.FileStore;
import java.nio.file.FileSystem;
import java.nio.file.FileSystems;
import java.util.Scanner;

public class Simple1 {

	public static void main(String[] args) throws IOException {
		
		Scanner input = new Scanner(System.in);
		System.out.print("Enter file extension : ");
		String extension = input.next();
		
		File file = new File("D:\\JavaTrainingIO");
		FileSystem fileSystem = FileSystems.getDefault();
		Iterable<FileStore> stores=fileSystem.getFileStores();
		
		File[] allTextFiles=file.listFiles(new FileFilter() {
			public boolean accept(FileSystem fileSystem) {
             if(fileSystem.getFileStores().endsWith("txt")) {
            	 return true;
             }
				return false;
			}

			@Override
			public boolean accept(File pathname) {
				// TODO Auto-generated method stub
				return false;
			}
		});
		for(File txtFile:allTextFiles) {
			System.out.println(txtFile);
		}

	}

}